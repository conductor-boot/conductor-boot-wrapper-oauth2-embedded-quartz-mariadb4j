<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.my</groupId>
	<artifactId>conductor-boot-wrapper-oauth2--embedded-quartz-mariadb4j</artifactId>
	<version>${conductor.version}</version>
	<name>conductor-boot-wrapper-oauth2-embedded-quartz-mariadb4j</name>
	<description>Netflix Conductor wrapped under a Spring Boot application with Zuul Gateway and API Authentication using JWT. Also an embedded MariaDB4J is integrated to remove external dependency of persistence unit.</description>

	<properties>
		<java.version>1.8</java.version>
		<conductor.version>2.24.0</conductor.version>
		<logbook.version>1.7.1</logbook.version>	
		<mariaDB4j.version>2.4.0</mariaDB4j.version>
		<openui.version>1.2.32</openui.version>	
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>*</artifactId>
            </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
			<exclusions>
				<exclusion>
					 <groupId>com.google.guava</groupId>
    				 <artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.zalando</groupId>
		    <artifactId>logbook-spring-boot-starter</artifactId>
		    <version>${logbook.version}</version>
		</dependency>
		<dependency>
		    <groupId>ch.vorburger.mariaDB4j</groupId>
		    <artifactId>mariaDB4j</artifactId>
		    <version>${mariaDB4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
        <dependency>
		   <groupId>org.flywaydb</groupId>
		   <artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		</dependency>
        <dependency>
	    	<groupId>com.netflix.conductor</groupId>
		    <artifactId>conductor-server</artifactId>
		    <version>${conductor.version}</version>
		    <classifier>all</classifier>
		    <type>jar</type>
		</dependency>
		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-ui</artifactId>
		    <version>${openui.version}</version>
		</dependency>
		<dependency>
		      <groupId>org.springframework.boot</groupId>
		      <artifactId>spring-boot-starter-web-services</artifactId>
		 </dependency>
		 <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		    <exclusions>
		    	<exclusion>
			      <groupId>org.hibernate</groupId>
			      <artifactId>hibernate-core</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>org.apache.tomcat</groupId>
			      <artifactId>tomcat-jdbc</artifactId>
			    </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
			 <groupId>org.hibernate</groupId>
		      <artifactId>hibernate-core</artifactId>
		      <version>5.4.4.Final</version>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<requiresUnpack>
						<depedency>
							<groupId>com.netflix.conductor</groupId>
						    <artifactId>conductor-server</artifactId>
						    <version>${conductor.version}</version>
						    <classifier>all</classifier>
						</depedency>
					</requiresUnpack>
				</configuration>
			</plugin>
		</plugins>
		<finalName>conductor-boot-wrapper-${project.version}-all</finalName>
	</build>
	
		<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>
